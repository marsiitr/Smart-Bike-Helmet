/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/f4951c15-af1d-421e-a9c5-b52e51537730

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudAcceleration acceleration;
  float alcoholLevel;
  CloudLocation liveLocation;
  bool accidentStat;
  bool bikeStat;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <SoftwareSerial.h>
SoftwareSerial node(D1 , D2);

// int mq3_analogPin = A0; // connected to the output pin of MQ3

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  node.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  Serial.println("MQ3 warming up!");
  delay(20000);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}
double lat=29.8664019;
double lon=77.8994397;


void loop() {
  ArduinoCloud.update();
  // Your code here
  // readAlcoholLvl();
  lat+=0.001;
  lon+=0.001;
  liveLocation={lat, lon};
  ArduinoIoTPreferredConnection.check();
  String t1 = node.readStringUntil('\r');
  acceleratio = t1.toFloat();
  
  delay(800);
  String t2 = node.readStringUntil('\r');
  if(t2='true')
    accidentStat=true;
  else if(t2='false')
    accidentStat=false;
  String t3 = node.readStringUntil('\r');
  alcoholLevel = t3.toFloat();
  String t4 = node.readStringUntil('\r');
  if(t4='true')
    bikeStat=true;
  else if(t4='false')
    bikeStat=false;
  delay(800);
}

/*
  Since Acceleration is READ_WRITE variable, onAccelerationChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAccelerationChange()  {
  // Add your code here to act upon Acceleration change
}

// void readAlcoholLvl(){
//   //sensorValue = analogRead(MQ3pin); // read analog input pin 0
//   Serial.print("Sensor Value: ");
//  //Serial.println(sensorValue);
//  delay(2000); // wait 2s for next reading
//   int mq3_value = analogRead(mq3_analogPin);
//   Serial.println(mq3_value);
//   delay(100); //Just here to slow down the output.
//   alcoholLevel=mq3_value;
// }
/*
  Since AccidentStat is READ_WRITE variable, onAccidentStatChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAccidentStatChange()  {
  // Add your code here to act upon AccidentStat change
}
